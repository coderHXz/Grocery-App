@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Product>;

@{
	ViewData["Title"] = "List of Products";
}

<div class="row">
	@foreach (var item in Model)
	{
		<div class="col-md-4 col-xs-6 border-primary mb-3">
			<div class="card mb-3" style="max-width: 540px;">
				<div class="row g-0">
					<div class="col-md-12">
						<div class="card-header text-white bg-info">
							<p class="card-text">
								<h5 class="card-title">
									@item.Name
									@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
									{
										<a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
										<form class="d-inline-block float-right" method="post" action="@Url.Action("Delete", "Products", new { id = item.Id })" onsubmit="return confirm('Are you sure you want to delete this product?')">
											<button type="submit" class="btn btn-transparent delete-button float-right">
												<i class="bi bi-trash"></i>
											</button>
										</form>
									}
								</h5>
							</p>
						</div>
					</div>
					<div class="col-md-6">
						<img src="@item.ImageURL" width="100%" alt="@item.Name">
					</div>
					<div class="col-md-6">
						<div class="card-body">
							<p class="card-text">@item.Description</p>
							<p class="card-text"><b>Supplier: </b>@item.Supplier.Name</p>
							<p class="card-text"><b>Category: </b>@item.ProductCatogary</p>
							<p class="card-text"><b>Expiry Date: </b>@item.ExpiryDate.ToString("dd MMM yy")</p>
							<p class="card-text ">
								<b>Status: </b>
								@if (DateTime.Now <= item.ExpiryDate)
								{
									<span class="badge bg-success text-white">AVAILABLE</span>
								}
								else
								{
									<span class="badge bg-danger text-white">EXPIRED</span>
								}
							</p>

						</div>
					</div>
					<div class="col-md-12">
						<div class="card-footer ">
							<p class="card-text">
								<a class="btn btn-outline-primary float-right" asp-action="Details" asp-route-id="@item.Id">
									<i class="bi bi-eye-fill"></i> Show Details
								</a>
								@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
								{
									<a class="btn btn-success text-white @((DateTime.Now > item.ExpiryDate) ? "disabled" : "")"
									   asp-controller="Orders"
									   asp-action="AddItemToShoppingCart"
									   asp-route-id="@item.Id">
										<i class="bi bi-cart-plus"></i> Add to Cart (Price @item.Price.ToString("c"))
									</a>
								}
								else
								{
									@item.Price.ToString("c")
								}
							</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
</div>
<div style="margin-top: 20px; text-align: center;">
	<style>
		.pagination {
			display: inline-flex;
			padding: 0;
			margin: 0;
		}

			.pagination li {
				color: black;
				float: left;
				padding: 8px 16px;
				text-decoration: none;
				border: 1px solid #ddd;
				margin: 0 4px;
			}

				.pagination li.active {
					background-color: #4CAF50;
					color: white;
					border: 1px solid #4CAF50;
				}

				.pagination li:hover:not(.active) {
					background-color: #ddd;
				}
	</style>
	@Html.PagedListPager(Model, page =>Url.Action("Index", new {page, sortOrder = ViewBag.PriceSortParam}), new PagedListRenderOptions {Display = X.PagedList.Mvc.Common.PagedListDisplayMode.IfNeeded})
</div>

<div>
	<strong>
		Sort by Price:
	</strong>
	<span>
		<a href="@Url.Action("Index", new { sortOrder = "price_asc"} )">Low to High</a> |
		<a href="@Url.Action("Index", new { sortOrder = "price_desc"} )">High to Low</a>
	</span>
</div>

@await Html.PartialAsync("_CreateItem", "Products")
